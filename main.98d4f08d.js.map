{"version":3,"sources":["scripts/main.js"],"names":["startY","startX","moveY","moveX","startButton","document","querySelector","gameScore","gameStatus","table","rows","score","gameField","resetTheGame","row","length","cell","changingDivMessage","value","children","child","classList","contains","remove","add","randomNumber","randomNum","Math","floor","random","randomRowIndex","randomColumnIndex","renderGameField","innerText","x","y","className","checkRowForGameOver","field","rowStatus","map","r","filter","digit","i","gameOver","columns","transformToColumn","push","checkRows","checkColumns","slidingSum","key","fieldRow","reverse","moveLeftAndRight","moveUpAndDown","transformRow","c","simulateKeyPress","code","dispatchEvent","KeyboardEvent","addEventListener","e","lose","copyTableGame","JSON","parse","stringify","touches","clientY","clientX","endY","abs","endX"],"mappings":"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","file":"main.98d4f08d.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst startButton = document.querySelector('.start');\nconst gameScore = document.querySelector('.game-score');\nconst gameStatus = document.querySelector('.message-container');\nconst table = document.querySelector('.game-field');\nconst rows = table.rows;\nlet score = 0;\nlet startY;\nlet startX;\nlet moveY;\nlet moveX;\n\nconst gameField = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfunction resetTheGame() {\n  score = 0;\n\n  for (let row = 0; row < gameField.length; row++) {\n    for (let cell = 0; cell < gameField.length; cell++) {\n      gameField[row][cell] = 0;\n    }\n  }\n}\n\nfunction changingDivMessage(value) {\n  for (const child of gameStatus.children) {\n    if (child.classList.contains(`message-${value}`)) {\n      child.classList.remove('hidden');\n    } else {\n      child.classList.add('hidden');\n    }\n  }\n}\n\nfunction randomNumber() {\n  let randomNum = Math.floor(Math.random() * (10 - 1) + 1);\n  let randomRowIndex = Math.floor(Math.random() * (4));\n  let randomColumnIndex = Math.floor(Math.random() * (4));\n\n  while (gameField[randomRowIndex][randomColumnIndex] !== 0) {\n    randomRowIndex = Math.floor(Math.random() * (4));\n    randomColumnIndex = Math.floor(Math.random() * (4));\n  }\n\n  if (randomNum < 2) {\n    randomNum = 4;\n  } else {\n    randomNum = 2;\n  }\n\n  gameField[randomRowIndex][randomColumnIndex] = randomNum;\n}\n\nfunction renderGameField() {\n  gameScore.innerText = score;\n\n  for (let x = 0; x < gameField.length; x++) {\n    for (let y = 0; y < gameField.length; y++) {\n      if (gameField[x][y] !== 0) {\n        rows[x].children[y].className = 'field-cell';\n        rows[x].children[y].innerText = gameField[x][y];\n\n        if (gameField[x][y] > 2048) {\n          rows[x].children[y].classList.add(`field-cell--2048`);\n        } else {\n          rows[x].children[y].classList.add(`field-cell--${gameField[x][y]}`);\n        }\n      } else {\n        rows[x].children[y].className = 'field-cell';\n        rows[x].children[y].innerText = '';\n      }\n    }\n  }\n}\n\nfunction checkRowForGameOver(field) {\n  let rowStatus = false;\n\n  field.map(r => {\n    return r.filter(digit => {\n      for (let i = 0; i < gameField.length; i++) {\n        if (r[i] === r[i + 1] || r[i] === 0) {\n          rowStatus = true;\n\n          return;\n        }\n      }\n    });\n  });\n\n  return rowStatus;\n}\n\nfunction gameOver() {\n  const columns = [];\n\n  for (let r = 0; r < gameField.length; r++) {\n    const transformToColumn = [\n      gameField[0][r], gameField[1][r], gameField[2][r], gameField[3][r],\n    ];\n\n    columns.push(transformToColumn);\n  }\n\n  const checkRows = checkRowForGameOver(gameField);\n  const checkColumns = checkRowForGameOver(columns);\n\n  if (!checkRows && !checkColumns) {\n    changingDivMessage('lose');\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction slidingSum(row, key) {\n  let fieldRow = row.filter(digit => digit !== 0);\n\n  if (key === 'ArrowRight' || key === 'ArrowDown') {\n    fieldRow.reverse();\n  }\n\n  for (let cell = 0; cell < fieldRow.length; cell++) {\n    if (fieldRow[cell] === fieldRow[cell + 1]) {\n      fieldRow[cell] *= 2;\n      fieldRow[cell + 1] = 0;\n      score += fieldRow[cell];\n    }\n  }\n\n  fieldRow = fieldRow.filter(digit => digit !== 0);\n\n  while (fieldRow.length < gameField.length) {\n    fieldRow.push(0);\n  }\n\n  return key === 'ArrowRight' || key === 'ArrowDown'\n    ? fieldRow.reverse()\n    : fieldRow;\n}\n\nfunction moveLeftAndRight(key) {\n  for (let r = 0; r < gameField.length; r++) {\n    let row = gameField[r];\n\n    row = slidingSum(row, key);\n    gameField[r] = row;\n  }\n}\n\nfunction moveUpAndDown(key) {\n  for (let r = 0; r < gameField.length; r++) {\n    let transformRow = [\n      gameField[0][r], gameField[1][r], gameField[2][r], gameField[3][r],\n    ];\n\n    transformRow = slidingSum(transformRow, key);\n\n    for (let c = 0; c < gameField.length; c++) {\n      gameField[c][r] = transformRow[c];\n    }\n  }\n}\n\nfunction simulateKeyPress(code) {\n  document.dispatchEvent(new KeyboardEvent('keyup', { 'code': code }));\n}\n\nstartButton.addEventListener('click', (e) => {\n  if (startButton.classList.contains('start')) {\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startButton.innerText = 'restart';\n  }\n\n  changingDivMessage('restart');\n  resetTheGame();\n  randomNumber();\n  randomNumber();\n  renderGameField();\n});\n\ndocument.addEventListener('keyup', (key) => {\n  const lose = document.querySelector('.message-lose');\n\n  if (startButton.classList.contains('start')) {\n    return;\n  }\n\n  if (!lose.classList.contains('hidden')) {\n    return;\n  }\n\n  const copyTableGame = JSON.parse(JSON.stringify(gameField));\n\n  switch (key.code) {\n    case 'ArrowLeft':\n      moveLeftAndRight(key.code);\n      break;\n\n    case 'ArrowRight':\n      moveLeftAndRight(key.code);\n      break;\n\n    case 'ArrowUp':\n      moveUpAndDown(key.code);\n      break;\n\n    case 'ArrowDown':\n      moveUpAndDown(key.code);\n      break;\n  }\n\n  if (JSON.stringify(copyTableGame) === JSON.stringify(gameField)) {\n    return;\n  }\n\n  randomNumber();\n\n  renderGameField();\n\n  const loseStatus = gameOver();\n\n  if (!loseStatus) {\n    changingDivMessage('lose');\n  }\n});\n\ndocument.addEventListener('touchstart', (e) => {\n  startY = e.touches[0].clientY;\n  startX = e.touches[0].clientX;\n});\n\ndocument.addEventListener('touchmove', (e) => {\n  moveY = e.touches[0].clientY;\n  moveX = e.touches[0].clientX;\n});\n\ndocument.addEventListener('touchend', (e) => {\n  const endY = Math.abs(startY - moveY);\n  const endX = Math.abs(startX - moveX);\n\n  if ((startY - moveY) < 0 && endY > endX) {\n    simulateKeyPress('ArrowDown');\n  }\n\n  if ((startY - moveY) > 0 && endY > endX) {\n    simulateKeyPress('ArrowUp');\n  }\n\n  if ((startX - moveX) < 0 && endX > endY) {\n    simulateKeyPress('ArrowRight');\n  }\n\n  if ((startX - moveX) > 0 && endX > endY) {\n    simulateKeyPress('ArrowLeft');\n  }\n});\n"]}